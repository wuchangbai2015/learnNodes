C51 COMPILER V9.50a   LCD                                                                  04/23/2016 22:37:57 PAGE 1   


C51 COMPILER V9.50a, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN .\OUT\lcd.obj
COMPILER INVOKED BY: D:\Program Files\Keil\C51\BIN\C51.EXE SOURCES\lcd.c LARGE BROWSE MODP2 INCDIR(.\SOURCES) DEBUG OBJE
                    -CTEXTEND PRINT(.\OUT\lcd.lst) TABS(2) OBJECT(.\OUT\lcd.obj)

line level    source

   1          //////////////////////////////////////////////////////////////////////////////////   
   2          //本程序只供学习使用，未经作者许可，不得用于其它任何用途
   3          //测试硬件：51 TFT TEST BOARD V1.0/MCU :STC12LE5A60S2/STC12C5A60S2   晶振:33MHZ
   4          //RV12864 SPI串口TFT液晶驱动
   5          //ronview@ShenZhen RonView co., LTD
   6          //淘宝网站：https://shop150504992.taobao.com/
   7          //我司提供技术支持，任何技术问题欢迎随时交流学习
   8          //手机:17097319383
   9          //邮箱:990777066@qq.com 
  10          //QQ:990777066
  11          //Skype:ronview
  12          //QQ技术支持群：288486111
  13          //创建日期:2016/3/18
  14          //版本：V1.0
  15          //版权所有，盗版必究。
  16          //Copyright(C) 深圳龙威显示技术有限公司 2015-2065
  17          //All rights reserved
  18          //////////////////////////////////////////////////////////////////////////////////
  19          /* 
  20          代码测试环境:单片机STC12LE5A60S2/STC12C5A60S2,晶振33M  单片机工作电压3.3V
  21          程序默认IO连接方式：
  22          接线方式：D/C-P3^5;    SDI-P3^6;   SCK-P3^7;   CS-P1^0;   REST-P1^2;
  23          */
  24          #include "config.h"
  25          #include "5X8ziku.h"
  26          
  27          
  28          void LCDShiftWrite(u8 dat)   
  29          {    
  30   1        u8 i;                                      
  31   1        u8 Series; 
  32   1                                                 
  33   1        Series = dat;   
  34   1        for(i=0; i<8; i++)   
  35   1        {   
  36   2          LCD_SCK=0;  
  37   2          if(Series&0x80) LCD_SDI=1;
  38   2          else LCD_SDI=0;
  39   2          LCD_SCK=1;                            
  40   2          Series = Series << 1;               
  41   2        }   
  42   1      }   
  43          
  44          
  45          void send_cmd(u8 cmd)
  46          {
  47   1        LCD_CS=0;
  48   1        LCD_DC=0;
  49   1        LCDShiftWrite(cmd);
  50   1        LCD_CS=1;
  51   1      }
  52          
  53          void send_dat(u8 dat)
  54          {
C51 COMPILER V9.50a   LCD                                                                  04/23/2016 22:37:57 PAGE 2   

  55   1        LCD_CS=0;
  56   1        LCD_DC=1;
  57   1        LCDShiftWrite(dat);
  58   1        LCD_CS=1;
  59   1      }
  60          
  61          
  62          void LCDInit(void) 
  63          { 
  64   1        LCD_RST=1;  
  65   1        delayms(5);
  66   1        LCD_RST=0;
  67   1        delayms(20);  
  68   1        LCD_RST=1;  
  69   1        delayms(20);
  70   1        
  71   1        send_cmd(0xe2);  //软复位
  72   1        delayms(10);
  73   1        send_cmd(0xa0);  //列扫描顺序：从左到右
  74   1        send_cmd(0xc8);  //行扫描顺序：从下到上，c0从上到下
  75   1        send_cmd(0xa2);  //设置偏压比1/9
  76   1        send_cmd(0x2f);  //控制电源
  77   1        send_cmd(0x25);  //粗调对比度
  78   1        send_cmd(0x81);  //微调对比度,进入微调对比度命令
  79   1        send_cmd(0x19);  //设置电压的参数RR值(对比度请修改此值，调浓增大此值，反之调淡)
  80   1        send_cmd(0x40);  //起始行：第一行开始
  81   1        send_cmd(0xaf);  //开显示
  82   1        
  83   1        ClearScreen();
  84   1      
  85   1      } 
  86          
  87          void Lcd_Address(u16 page,u16 column)
  88          {
  89   1        column=column-0x01;
  90   1        send_cmd(0xb0+page-1);   /*设置页地址*/ //1-8
  91   1        send_cmd(0x10+(column>>4&0x0f));  /*设置列地址的高4位*///0-128
  92   1        send_cmd(column&0x0f);  /*设置列地址的低4位*/ 
  93   1      }
  94          
  95          /*全屏清屏*/
  96          void ClearScreen(void)
  97          {
  98   1        unsigned char i,j;
  99   1        for(i=0;i<9;i++)
 100   1        {
 101   2          send_cmd(0xb0+i);  //从第0页开始
 102   2          send_cmd(0x10);
 103   2          send_cmd(0x00);
 104   2          for(j=0;j<132;j++)
 105   2          {
 106   3            send_dat(0x00);
 107   3          }
 108   2        }
 109   1      }
 110          
 111          /*显示128x64点阵图像*/
 112          void Display_128x64(u8 *dp)
 113          {
 114   1        u8 i,j;
 115   1        
 116   1        for(j=0;j<8;j++)
C51 COMPILER V9.50a   LCD                                                                  04/23/2016 22:37:57 PAGE 3   

 117   1        {
 118   2          Lcd_Address(j+1,1);
 119   2          for (i=0;i<128;i++)
 120   2          { 
 121   3            send_dat(*dp);    /*写数据到LCD,每写完一个8位的数据后列地址自动加1*/
 122   3            dp++;
 123   3          }
 124   2        }
 125   1      }
 126          
 127          /*显示16x16点阵图像、汉字、生僻字或16x16点阵的其他图标*/
 128          void Display_Graphic_16x16(u8 page,u8 column,u8 *dp)
 129          {
 130   1        u8 i,j;
 131   1        
 132   1        for(j=0;j<2;j++)
 133   1        {
 134   2          Lcd_Address(page+j,column);
 135   2          for (i=0;i<16;i++)
 136   2          { 
 137   3            send_dat(*dp);   /*写数据到LCD,每写完一个8位的数据后列地址自动加1*/
 138   3            dp++;
 139   3          }
 140   2        }
 141   1      }
 142          
 143          /*显示8x16点阵图像、ASCII, 或8x16点阵的自造字符、其他图标*/
 144          void Display_Graphic_8x16(u8 page,u8 column,u8 *dp)
 145          {
 146   1        u8 i,j;
 147   1        
 148   1        for(j=0;j<2;j++)
 149   1        {
 150   2          Lcd_Address(page+j,column);
 151   2          for (i=0;i<8;i++)
 152   2          { 
 153   3            send_dat(*dp);    /*写数据到LCD,每写完一个8位的数据后列地址自动加1*/
 154   3            dp++;
 155   3          }
 156   2        }
 157   1      }
 158          
 159          /*显示5*8点阵图像、ASCII, 或5x8点阵的自造字符、其他图标*/
 160          void Display_Graphic_5x8(u8 page,u8 column,u8 *dp)
 161          {
 162   1        u8 col_cnt;
 163   1        
 164   1          Lcd_Address(page,column);
 165   1        for (col_cnt=0;col_cnt<5;col_cnt++)
 166   1        { 
 167   2          send_dat(*dp);
 168   2          dp++;
 169   2        }
 170   1      }
 171          
 172          void Scribing(void)
 173          {
 174   1        u8 i;
 175   1        
 176   1        Lcd_Address(2, 1);
 177   1        for (i=0; i<128; i++)
 178   1        {
C51 COMPILER V9.50a   LCD                                                                  04/23/2016 22:37:57 PAGE 4   

 179   2          send_dat(0x08);
 180   2        }   
 181   1      }
 182          
 183          void DisplayFont(u8 page, u8 column, u8 No, u8 typeface)
 184          {
 185   1        u8 *dp;
 186   1        
 187   1        switch (typeface)
 188   1        {
 189   2          case FONT_5X8:
 190   2            dp = font5x8[No];
 191   2            Display_Graphic_5x8(page, column, dp);
 192   2            break;
 193   2          case FONT_8X16:
 194   2            dp = font8x16[No];
 195   2            Display_Graphic_8x16(page, column, dp);
 196   2            break;
 197   2          case FONT_16X16:
 198   2            dp = font16x16[No];
 199   2            Display_Graphic_16x16(page, column, dp);
 200   2            break;
 201   2          case FONT_128X64:
 202   2            dp = IMG128x64;
 203   2            Display_128x64(dp);
 204   2            break;
 205   2          case SCRIBING:
 206   2            Scribing();
 207   2            break;
 208   2          default:
 209   2            break;
 210   2        }      
 211   1      }
 212          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    616    ----
   CONSTANT SIZE    =   5744    ----
   XDATA SIZE       =   ----      14
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
