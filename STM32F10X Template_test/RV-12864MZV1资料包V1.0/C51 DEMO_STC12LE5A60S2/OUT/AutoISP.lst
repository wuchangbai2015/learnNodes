C51 COMPILER V9.02   AUTOISP                                                               04/09/2016 19:32:35 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE AUTOISP
OBJECT MODULE PLACED IN .\OUT\AutoISP.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE SOURCES\AutoISP.c LARGE BROWSE MODP2 DEBUG OBJECTEXTEND PRINT(.\OUT\AutoISP
                    -.lst) TABS(2) OBJECT(.\OUT\AutoISP.obj)

line level    source

   1          #include "config.h"
   2          
   3          
   4          // ISP下载命令
   5          static const u8 ISP_DownCmd[4] = {0x55,0xaa,0x5a,0xa5};
   6          
   7          // 延时函数
   8          static void delay(u32 dly)
   9          {
  10   1          u32 i;
  11   1          while(--dly > 0)
  12   1          {
  13   2              for(i=0;i++;i<1000000);
  14   2          }
  15   1      }
  16          
  17          // 下载命令检测函数
  18          u8 ISP_CmpDownCmd(u8 chr)
  19          {
  20   1          static u8 i=0;
  21   1          if(chr == ISP_DownCmd[i])
  22   1          {
  23   2              i++;
  24   2              if(i == 4)
  25   2              {
  26   3                  delay(100000);          // 延时1秒就足够了
  27   3                  IAP_CONTR = 0x60;       // 软复位到系统ISP监控区
  28   3              }
  29   2          }else{
  30   2              i=0;
  31   2          }
  32   1          return 0;
  33   1      }
  34          /*
  35          // 串口发送
  36          void UART_SendChar(U8 chr)
  37          {
  38              ES     =   0;  //关串口中断
  39              TI     =   0;  //清零串口发送完成中断请求标志
  40              SBUF   =   chr;
  41              while(TI ==0); //等待发送完成
  42              TI     =   0;  //清零串口发送完成中断请求标志
  43              ES     =   1;  //允许串口中断
  44          }
  45          
  46          char putchar (char c)
  47          {
  48              UART_SendChar(c);
  49              return(c);
  50          }
  51          
  52          void UART_SendString(U8 *str)
  53          {
  54              while(*str)
C51 COMPILER V9.02   AUTOISP                                                               04/09/2016 19:32:35 PAGE 2   

  55              {
  56                  UART_SendChar(*str++);
  57              }
  58          }
  59          
  60          static const char code digits[17] = "0123456789ABCDEF";
  61          void PutHEX(U8 c)
  62          {
  63              UART_SendChar(digits[(c>>4)&0x0f]);
  64              UART_SendChar(digits[c&0x0f]);
  65          }
  66          
  67          */
  68          // 串口中断
  69          void UART_Interrupt_Receive(void) interrupt 4
  70          {
  71   1          u8 k = 0;
  72   1          if(RI==1)
  73   1          {
  74   2              RI  =   0;
  75   2              k   =   SBUF;
  76   2              ISP_CmpDownCmd(k);
  77   2          }
  78   1          if(TI == 1)
  79   1          {
  80   2              TI  =  0;
  81   2          }
  82   1      }
  83          // 串口初始化
  84          void UartInit(void)   
  85          {
  86   1          P3M0 &= ~0x03;
  87   1          P3M1 &= ~0x03;
  88   1      
  89   1        PCON &= 0x7f;       // 波特率不倍速
  90   1        SCON  = 0x50;       // 8位数据,可变波特率
  91   1        BRT   = 0xFA;       // 设定独立波特率发生器重装值  //115200bps@22.1184MHz
  92   1        AUXR |= 0x04;       // 独立波特率发生器时钟为Fosc,即1T
  93   1        AUXR |= 0x01;       // 串口1选择独立波特率发生器为波特率发生器
  94   1        AUXR |= 0x10;       // 启动独立波特率发生器
  95   1      
  96   1          TI = 0;             // 清零串口发送完成中断请求标志
  97   1          PS = 1;             // 串口中断  优先级控制位, 1 为高优先级 0 为低优先级
  98   1          ES = 1;             // 允许串口中断
  99   1          EA = 1;             // 开总中断
 100   1      }
 101          
 102          
 103          
 104          
 105          
 106          
 107          
 108          
 109          
 110          
 111          
 112          
 113          
 114          
 115          

C51 COMPILER V9.02   AUTOISP                                                               04/09/2016 19:32:35 PAGE 3   


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    257    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      5       8
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
