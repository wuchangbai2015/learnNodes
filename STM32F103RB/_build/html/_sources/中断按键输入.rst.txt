

通用中断式按键输入-按钮点亮LED
===================================

配置流程
-----------------------------------	

	1.配置时钟
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	
		我们需要同时开启GPIO和AFIO的时钟，
		注：在这里由 于IO 口不是当作普通IO来用的，
		而是启用其复用功能，因此需要开启AFIO时钟。
		
		.. code-block:: sh
		
			RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA | RCC_APB2Periph_AFIO, ENABLE);
	
	2.配置GPIO
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

        .. code-block:: sh
	
			GPIO_InitStructure.GPIO_Pin = GPIO_Pin_11;
		
			GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
		
			GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
		
			GPIO_Init(GPIOB, &GPIO_InitStructure);
		
	3.将 GPIO 和外部中断线连接起来
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	
		即， 将 PB11 与 EXIT_11 连接起来。
		
		.. code-block:: sh
		
			GPIO_EXTILineConfig(GPIO_PortSourceGPIOB, GPIO_PinSource11);
	
	4.配置 EXIT
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

		.. code-block:: sh
	
			EXTI_InitTypeDef EXTI_InitStructure;Joy Create Workroom

			EXTI_InitStructure.EXTI_Line = EXTI_Line11;
		
			EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;
		
			EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Falling;
		
			EXTI_InitStructure.EXTI_LineCmd = ENABLE;
		
			EXTI_Init(&EXTI_InitStructure);
		
		分析以上的程序代码， 我们来具体研究一下。 首先， 定义了一个关于外部中
		断的初始化结构体。 接着所做的工作即是对此结构体的每一个元素进行赋值。 最
		后再用初始化函数是能此结构体。关于结构体每个元素的赋值参数， 参考 《 STM32
		固件库中文手册》 即可
	
	5.配置 NVIC
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

		.. code-block:: sh
	
			NVIC_InitTypeDef NVIC_InitStructure;
	
			NVIC_PriorityGroupConfig(NVIC_PriorityGroup_0); //设置组优先级
	
			NVIC_InitStructure.NVIC_IRQChannel = EXTI15_10_IRQn; //外部中断线
	
			NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0; //设置抢占优先级
	
			NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0; //设置子优先级
	
			NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE; //使能 IRQ 中断
	
			NVIC_Init(&NVIC_InitStructure);

	6.写中断服务程序
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

		.. code-block:: sh
	
			void EXTI15_10_IRQHandler(void)
		
			{
		
				if (EXTI_GetITStatus(EXTI_Line11) != RESET)
			
				{
			
					EXTI_ClearITPendingBit(EXTI_Line11); //清除标志
				
					...
				
				}
			
			}
		
		
		

		
		
	
	
	
	

